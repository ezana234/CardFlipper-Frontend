[{"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\index.js":"1","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\App.js":"2","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Login.js":"4","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Dashboard.js":"5","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Constants.js":"6","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\components\\useToken.js":"7","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Header.js":"8","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Game.js":"9","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\index.js":"10","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\reportWebVitals.js":"11","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\App.js":"12","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Login.js":"13","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Game.js":"14","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Dashboard.js":"15","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\components\\useToken.js":"16","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Header.js":"17","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Constants.js":"18"},{"size":500,"mtime":1636394405376,"results":"19","hashOfConfig":"20"},{"size":943,"mtime":1638933247131,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1636056052084,"results":"22","hashOfConfig":"20"},{"size":2786,"mtime":1638933524819,"results":"23","hashOfConfig":"20"},{"size":3174,"mtime":1638933450522,"results":"24","hashOfConfig":"20"},{"size":95,"mtime":1638936341969,"results":"25","hashOfConfig":"20"},{"size":2043,"mtime":1638766198065,"results":"26","hashOfConfig":"20"},{"size":362,"mtime":1638933277628,"results":"27","hashOfConfig":"20"},{"size":10288,"mtime":1638934013893,"results":"28","hashOfConfig":"20"},{"size":500,"mtime":1636394405376,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1636056052084,"results":"31","hashOfConfig":"30"},{"size":943,"mtime":1638933247131,"results":"32","hashOfConfig":"30"},{"size":2786,"mtime":1638933524819,"results":"33","hashOfConfig":"30"},{"size":10288,"mtime":1638934013893,"results":"34","hashOfConfig":"30"},{"size":3174,"mtime":1638933450522,"results":"35","hashOfConfig":"30"},{"size":2043,"mtime":1638766198065,"results":"36","hashOfConfig":"30"},{"size":362,"mtime":1638933277628,"results":"37","hashOfConfig":"30"},{"size":95,"mtime":1638943579378,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1dli85w",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pv01iy",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\index.js",[],["77","78"],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\App.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Login.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Dashboard.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Constants.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\components\\useToken.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Header.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\frontend\\src\\containers\\Game.js",["79","80","81"],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\index.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\App.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Login.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Game.js",["82","83","84"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation, useNavigate} from 'react-router-dom';\r\n//import Form from \"react-bootstrap/Form\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Game.css\";\r\nimport axios from \"axios\";\r\nimport * as constants from './Constants';\r\n//import { useLocation } from \"react-router\";\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport { ChatBox } from 'react-chatbox-component';\r\nimport io from \"socket.io-client\";\r\n//import $ from \"jquery\";\r\nimport useToken from \"../components/useToken\";\r\nimport { Modal } from \"react-bootstrap\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport $ from 'jquery';\r\nimport Confetti from 'react-dom-confetti';\r\n\r\n\r\n\r\nexport default function Game() {\r\n  // Variables\r\n  // Get User and Token\r\n  const { token, user } = useToken();\r\n  const navigate = useNavigate();\r\n  const [mount, setMount] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  const [card, setCard] = useState([]);\r\n  const [startVisible, setStartVisible] = useState(true);\r\n  const [disableStart, setDisableStart] = useState(false);\r\n  const [waitVisible, setWaitVisible] = useState(false);\r\n  let initialGameState = 0;\r\n  const { state } = useLocation();\r\n  const { roomID } = state;\r\n  const turn = useRef(false)\r\n  let count = 0;\r\n  const [playerTurn, setPlayerTurn] = useState(\"\");\r\n  let pointArray = [];\r\n  const userObj = {\r\n    uid: user\r\n  }\r\n  // Config object for the confetti\r\n  const config = {\r\n    angle: \"213\",\r\n    spread: 360,\r\n    startVelocity: 40,\r\n    elementCount: \"200\",\r\n    dragFriction: 0.12,\r\n    duration: 3000,\r\n    stagger: \"5\",\r\n    width: \"10px\",\r\n    height: \"10px\",\r\n    perspective: \"500px\",\r\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\r\n  };\r\n  const [activeConfetti, setActiveConfetti] = useState(false);\r\n  // Initialize Webssockets\r\n  let chatSocket = useRef();\r\n  let gameSocket = useRef();\r\n  //Modal Data\r\n  const [show, setShow] = useState(false);\r\n  // Message array for chatbox\r\n  const [message, setMessage] = useState(\"\")\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleMessage = (text) => setMessage(text)\r\n  //const { state } = useLocation();\r\n\r\n  // Code that is run immediately \r\n  useEffect(() => {\r\n    // connect to sockets\r\n    startWebSocket();\r\n    // Wait about a second to connect to websockets since they just\r\n    // got created in the backend\r\n    setTimeout(() => {\r\n      // Connect to web sockets\r\n      chatSocket.current = io(\"http://localhost:3003/chat/\" + roomID);\r\n      gameSocket.current = io(\"http://localhost:3003/game/\" + roomID);\r\n      // Add to message array when recieving a message\r\n      chatSocket.current.on(\"text\", (message) => {\r\n        setMessages(array => [...array, message])\r\n      })\r\n      // On start\r\n      gameSocket.current.on(\"start\", (start) => {\r\n        // disable start button\r\n        setStartVisible(false);\r\n        if (initialGameState === 0) {\r\n          // Load the game state\r\n          SetGameState(start);\r\n          initialGameState++;\r\n        }\r\n\r\n      })\r\n      // On win, show which user won \r\n      gameSocket.current.on(\"win\", (username) => {\r\n        handleMessage(`${username} wins!!!`)\r\n        handleShow();\r\n        // Shower with confetti\r\n        setActiveConfetti(true)\r\n        setTimeout(() => {\r\n          navigate(\"/\")\r\n        }, 5000)\r\n      })\r\n      // On update, updatehe game state\r\n      gameSocket.current.on(\"update\", (data) => {\r\n        SetGameState(data)\r\n      })\r\n    }, 1500);\r\n    return () => { setMount({}); }\r\n  }, [])\r\n\r\n  // Code to initialize chat web socket\r\n  async function startWebSocket() {\r\n    try {\r\n      console.log(\"roomID: \", roomID)\r\n      await axios.post(constants.HOST + \"/initialize\", { roomID: roomID }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      //setUser(await jwtDecode(token).username);\r\n    } catch (error) {\r\n      handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Code that is called when chat is sent. Sends chat to API\r\n  const handleChat = async (message) => {\r\n    try {\r\n      console.log(\"roomID: \", roomID)\r\n      await axios.post(constants.HOST + \"/sendChat\", {\r\n        roomID: roomID,\r\n        message: message\r\n      }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleMessage(\"Couldn't Send Chat Message. Try Again!\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Code called when Start Game button is clicked\r\n  async function handleStart() {\r\n    try {\r\n      await axios.put(constants.HOST + \"/start/\" + roomID, {}, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      // Disable the start button\r\n      setDisableStart(true);\r\n      // Display message that you're waiting for the other person to continue\r\n      setWaitVisible(true);\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleMessage(\"Couldn't Start Game. Try Again!\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  function SetGameState(obj) {\r\n    // Create CardArray\r\n    let responseCard;\r\n    if (obj.cards) {\r\n      console.log(\"in Cards: \", obj.cards)\r\n      setCard([])\r\n      for (let i = 0; i < obj.cards.length; i++) {\r\n        // Hide cards if the cards have already been matched\r\n        const disabled = {\r\n        }\r\n        if (!obj.cards[i].active) {\r\n          disabled[\"visibility\"] = \"hidden\";\r\n        }\r\n        // Create card\r\n        responseCard = <div key={obj.cards[i].key} style={disabled} className=\"cardContainer\">\r\n          <div id={obj.cards[i].key} className=\"card\" onClick={(e) => flip(e)}>\r\n            <div className=\"front\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100\" >\r\n                <image className=\"Card\" href=\"/img/castle.svg\" height=\"100\" width=\"100\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"back\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100\" >\r\n                <image className=\"Card\" href={\"/img/\" + obj.cards[i].key + \".svg\"} height=\"100\" width=\"100\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        setCard(array => [...array, responseCard])\r\n      }\r\n    }\r\n    // set turn\r\n    if (obj.users) {\r\n      if (obj.users.filter(userObj => userObj.userID === user)) {\r\n        turn.current = obj.users.filter(userObj => userObj.userID === user)[0].turn\r\n      }\r\n      // Set who's turn it is in string form\r\n      if (obj.users.filter(userObj => userObj.turn === true)[0]) {\r\n        setPlayerTurn(obj.users.filter(userObj => userObj.turn === true)[0].userID.split(\"#\")[0])\r\n      }\r\n    }\r\n  }\r\n  // Responsible for flipping the cards\r\n  function flip(event) {\r\n    //increment count flip\r\n    console.log(turn.current)\r\n    if (turn.current) {\r\n      count += 1;\r\n      const id = event.target.parentNode.parentNode.parentNode.id;\r\n      // On first flip\r\n      if (count === 1) {\r\n        // Add id to array\r\n        pointArray.push(parseInt(id));\r\n        // Disable then flip the card\r\n        $(`#${id}`).css(\"pointer-events\", \"none\")\r\n        $(`#${id}`).toggleClass('flipped');\r\n      }\r\n      // On second flip\r\n      if (count === 2) {\r\n        // Add id to array\r\n        pointArray.push(parseInt(id))\r\n        $(`#${id}`).css(\"pointer-events\", \"none\")\r\n        $(`#${id}`).toggleClass('flipped');\r\n        // If cards match, disable immediately\r\n        verifyFlip().then(match => {\r\n          console.log(match)\r\n          // If the cards dont match\r\n          if (!match) {\r\n            // Enable the cards\r\n            for (const card of pointArray) {\r\n              $(`#${card}`).css(\"pointer-events\", \"\")\r\n            }\r\n            // Flip the cards back over\r\n            setTimeout(() => {\r\n              for (const card of pointArray) {\r\n                $(`#${card}`).toggleClass(\"flipped\")\r\n              }\r\n              count = 0;\r\n              pointArray = [];\r\n            }, 1000)\r\n          } else {\r\n            // If the cards match, the gamestate will be updated\r\n            count = 0;\r\n            pointArray = [];\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error)\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  // This function will send a request to check if the\r\n  // cards the user sent matches.\r\n  async function verifyFlip() {\r\n    // check if it's user's turn\r\n    try {\r\n      const response = await axios.put(constants.HOST + \"/room/points\", { roomID: roomID, points: pointArray }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      return response.data.match;\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  // HTML\r\n  return (\r\n    <div id=\"container\">\r\n      <Confetti active={activeConfetti} config={config} />\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"Primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {startVisible ?\r\n        <div className=\"startGame\">\r\n          <h3>RoomID: {roomID}</h3>\r\n          {waitVisible ? <h4>Waiting for other person to start the game...</h4> : null}\r\n          <Button onClick={handleStart} disabled={disableStart}>Start Game</Button>\r\n        </div> : null}\r\n      {!startVisible ? <div className=\"Game\">\r\n        <h3>It's {playerTurn}'s turn</h3>\r\n        {/* <img src=\"/img/abstract_scene.svg\" className=\"Card\" height=\"200\" width=\"150\"/> */}\r\n        {/* <svg id=\"Container\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" viewBox=\"0 0 285 50\">\r\n          <rect height=\"200\" width=\"300\" />\r\n        </svg> */}\r\n        {card}\r\n      </div> : null}\r\n      <div className=\"Chat\">\r\n        <h3>Chat</h3>\r\n        <ChatBox messages={messages} user={userObj} onSubmit={handleChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Dashboard.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\components\\useToken.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Header.js",[],"C:\\Users\\ezana\\OneDrive\\Desktop\\2021-2022 Fall\\SecureWebAppDev\\CardFlipper\\CardFlipper-Frontend\\src\\containers\\Constants.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":27,"column":10,"nodeType":"91","messageId":"92","endLine":27,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":111,"column":6,"nodeType":"95","endLine":111,"endColumn":8,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":195,"column":17,"nodeType":"99","messageId":"100","endLine":195,"endColumn":50},{"ruleId":"89","severity":1,"message":"90","line":27,"column":10,"nodeType":"91","messageId":"92","endLine":27,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":111,"column":6,"nodeType":"95","endLine":111,"endColumn":8,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":195,"column":17,"nodeType":"99","messageId":"100","endLine":195,"endColumn":50},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'mount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SetGameState', 'initialGameState', 'navigate', 'roomID', and 'startWebSocket'. Either include them or remove the dependency array.","ArrayExpression",["104"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'responseCard'.","ArrowFunctionExpression","unsafeRefs",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},"Update the dependencies array to be: [SetGameState, initialGameState, navigate, roomID, startWebSocket]",{"range":"109","text":"110"},{"range":"111","text":"110"},[3695,3697],"[SetGameState, initialGameState, navigate, roomID, startWebSocket]",[3695,3697]]