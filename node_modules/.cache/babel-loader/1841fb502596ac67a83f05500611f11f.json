{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import jwt from 'jwt-decode';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport * as CONSTANTS from '../containers/Constants';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    console.log(tokenString);\n\n    if (tokenString) {\n      const userToken = JSON.parse(tokenString);\n      return userToken;\n    } else {\n      return undefined;\n    }\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  const deleteToken = userToken => {\n    localStorage.removeItem('token');\n  }; // const verifyToken = (token) => {\n  //   console.log(\"token\", token )\n  //   if (!token) {\n  //     return false;\n  //   }\n  //   try {\n  //     let decodedToken = jwt(token);\n  //     let dateNow = new Date();\n  //     console.log(\"decoded\", decodedToken)\n  //     if (decodedToken.exp < new Date() / 1000) {\n  //       return false;\n  //     }\n  //     return true;\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n\n\n  const tokenExists = token => {\n    axios.get(CONSTANTS.HOST + \"/user\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token.token\n      }\n    }).then(response => {\n      console.log(response);\n      return true;\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  };\n\n  return {\n    token,\n    setToken: saveToken,\n    //checkVerifiedToken: verifyToken,\n    tokenExists\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/components/useToken.js"],"names":["useState","axios","CONSTANTS","useToken","getToken","tokenString","localStorage","getItem","console","log","userToken","JSON","parse","undefined","token","setToken","saveToken","setItem","stringify","deleteToken","removeItem","tokenExists","get","HOST","headers","then","response","catch","error"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;;AACA,QAAGA,WAAH,EAAgB;AACd,YAAMK,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWP,WAAX,CAAlB;AACA,aAAOK,SAAP;AACD,KAHD,MAGO;AACL,aAAOG,SAAP;AACD;AACF,GATD;;AAWA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACI,QAAQ,EAAT,CAAlC;;AAEA,QAAMY,SAAS,GAAGN,SAAS,IAAI;AAC7BJ,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeR,SAAf,CAA9B;AACAK,IAAAA,QAAQ,CAACL,SAAS,CAACI,KAAX,CAAR;AACD,GAHD;;AAKA,QAAMK,WAAW,GAAGT,SAAS,IAAI;AAC/BJ,IAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACD,GAFD,CAnBiC,CAuBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,WAAW,GAAIP,KAAD,IAAW;AAC3Bb,IAAAA,KAAK,CAACqB,GAAN,CAAUpB,SAAS,CAACqB,IAAV,GAAiB,OAA3B,EAAoC;AAClCC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYV,KAAK,CAACA;AAD5B;AADyB,KAApC,EAIGW,IAJH,CAIQC,QAAQ,IAAI;AAClBlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACA,aAAO,IAAP;AACD,KAPD,EAOGC,KAPH,CAOSC,KAAK,IAAI;AAChBpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAZ;AACA,aAAO,KAAP;AACD,KAVD;AAWH,GAZD;;AAcA,SAAO;AACLd,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAEC,SAFL;AAGL;AACAK,IAAAA;AAJK,GAAP;AAMD;;GA9DuBlB,Q","sourcesContent":["import { useState } from 'react';\r\n//import jwt from 'jwt-decode';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport axios from 'axios';\r\nimport * as CONSTANTS from '../containers/Constants';\r\n\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    console.log(tokenString);\r\n    if(tokenString) {\r\n      const userToken = JSON.parse(tokenString);\r\n      return userToken\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  const deleteToken = userToken => {\r\n    localStorage.removeItem('token')\r\n  }\r\n\r\n  // const verifyToken = (token) => {\r\n  //   console.log(\"token\", token )\r\n  //   if (!token) {\r\n  //     return false;\r\n  //   }\r\n  //   try {\r\n  //     let decodedToken = jwt(token);\r\n  //     let dateNow = new Date();\r\n  //     console.log(\"decoded\", decodedToken)\r\n\r\n  //     if (decodedToken.exp < new Date() / 1000) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   } catch (err) {\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n  const tokenExists = (token) => {\r\n      axios.get(CONSTANTS.HOST + \"/user\", {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token.token\r\n        }\r\n      }).then(response => {\r\n        console.log(response)\r\n        return true;\r\n      }).catch(error => {\r\n        console.log(error)\r\n        return false;\r\n      })\r\n  }\r\n\r\n  return {\r\n    token,\r\n    setToken: saveToken,\r\n    //checkVerifiedToken: verifyToken,\r\n    tokenExists\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}