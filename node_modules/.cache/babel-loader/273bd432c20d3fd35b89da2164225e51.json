{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport jwt from 'jwt-decode';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport * as CONSTANTS from '../containers/Constants';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  const verifyToken = token => {\n    console.log(\"token\", token);\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      let decodedToken = jwt(token);\n      let dateNow = new Date();\n      console.log(\"decoded\", decodedToken);\n\n      if (decodedToken.exp < new Date() / 1000) {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const tokenExists = async token => {\n    try {\n      console.log(token);\n      const response = await axios.get(CONST.HOST + \"/user\", {\n        headers: {\n          \"Authorization\": \"Bearer \" + token.token\n        }\n      });\n      console.log(response);\n    } catch (error) {\n      console.log('hi', error);\n    }\n  };\n\n  return {\n    token,\n    setToken: saveToken,\n    checkVerifiedToken: verifyToken\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/components/useToken.js"],"names":["useState","jwt","axios","CONSTANTS","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify","verifyToken","console","log","decodedToken","dateNow","Date","exp","err","tokenExists","response","get","CONST","HOST","headers","error","checkVerifiedToken"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP;AACD,GAJD;;AAMA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,QAAQ,EAAT,CAAlC;;AAEA,QAAMS,SAAS,GAAGL,SAAS,IAAI;AAC7BF,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAA9B;AACAI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD,GAHD;;AAKA,QAAMK,WAAW,GAAIL,KAAD,IAAW;AAC7BM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAArB;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AACD,QAAI;AACF,UAAIQ,YAAY,GAAGnB,GAAG,CAACW,KAAD,CAAtB;AACA,UAAIS,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,YAAvB;;AAEA,UAAIA,YAAY,CAACG,GAAb,GAAmB,IAAID,IAAJ,KAAa,IAApC,EAA0C;AACxC,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KATD,CASE,OAAOE,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD;AACF,GAjBD;;AAmBA,QAAMC,WAAW,GAAG,MAAOb,KAAP,IAAiB;AACnC,QAAI;AACFM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,YAAMc,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAUC,KAAK,CAACC,IAAN,GAAa,OAAvB,EAAgC;AACrDC,QAAAA,OAAO,EAAE;AACP,2BAAiB,YAAYlB,KAAK,CAACA;AAD5B;AAD4C,OAAhC,CAAvB;AAKAM,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACD,KARD,CAQE,OAAOK,KAAP,EAAc;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBY,KAAlB;AACD;AACF,GAZD;;AAcA,SAAO;AACLnB,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAEC,SAFL;AAGLkB,IAAAA,kBAAkB,EAAEf;AAHf,GAAP;AAKD;;GApDuBb,Q","sourcesContent":["import { useState } from 'react';\r\nimport jwt from 'jwt-decode';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport axios from 'axios';\r\nimport * as CONSTANTS from '../containers/Constants';\r\n\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  const verifyToken = (token) => {\r\n    console.log(\"token\", token )\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    try {\r\n      let decodedToken = jwt(token);\r\n      let dateNow = new Date();\r\n      console.log(\"decoded\", decodedToken)\r\n\r\n      if (decodedToken.exp < new Date() / 1000) {\r\n        return false;\r\n      }\r\n      return true;\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const tokenExists = async (token) => {\r\n    try {\r\n      console.log(token)\r\n      const response = await axios.get(CONST.HOST + \"/user\", {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token.token\r\n        }\r\n      });\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log('hi', error);\r\n    }\r\n  }\r\n\r\n  return {\r\n    token,\r\n    setToken: saveToken,\r\n    checkVerifiedToken: verifyToken\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}