{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezana\\\\OneDrive\\\\Desktop\\\\2021-2022 Fall\\\\SecureWebAppDev\\\\CardFlipper\\\\frontend\\\\src\\\\containers\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from 'react-router-dom'; //import Form from \"react-bootstrap/Form\";\n//import Button from \"react-bootstrap/Button\";\n\nimport \"../styles/Game.css\";\nimport axios from \"axios\";\nimport * as constants from './Constants'; //import { useLocation } from \"react-router\";\n\nimport 'react-chatbox-component/dist/style.css';\nimport { ChatBox } from 'react-chatbox-component';\nimport io from \"socket.io-client\"; //import $ from \"jquery\";\n\nimport useToken from \"../components/useToken\";\nimport { Modal } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport $, { data } from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  // Variables\n  //const [room, setRoom] = useState(\"\");\n  const {\n    token,\n    user\n  } = useToken();\n  const [mount, setMount] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [card, setCard] = useState([]);\n  const [startVisible, setStartVisible] = useState(true);\n  const [disableStart, setDisableStart] = useState(false);\n  const [waitVisible, setWaitVisible] = useState(false);\n  let initialGameState = 0;\n  const {\n    state\n  } = useLocation();\n  const {\n    roomID\n  } = state; //const [user, setUser] = useState(\"\");\n\n  const turn = useRef(false);\n  let count = 0;\n  const [playerTurn, setPlayerTurn] = useState(\"\");\n  let pointArray = [];\n  const userObj = {\n    uid: user\n  }; // const cardArray = ['clubs_2.svg', 'clubs_3.svg', 'clubs_4.svg', 'clubs_5.svg', 'clubs_6.svg', 'clubs_7.svg', 'clubs_8.svg',\n  //   'clubs_9.svg', 'clubs_10.svg', 'clubs_ace.svg', 'clubs_jack.svg', 'clubs_king.svg', 'clubs_queen.svg', 'diamonds_2.svg',\n  //   'diamonds_3.svg', 'diamonds_4.svg', 'diamonds_5.svg', 'diamonds_6.svg', 'diamonds_7.svg', 'diamonds_8.svg', 'diamonds_9.svg',\n  //   'diamonds_10.svg', 'diamonds_ace.svg', 'diamonds_jack.svg', 'diamonds_king.svg', 'diamonds_queen.svg',\n  //   'hearts_2.svg', 'hearts_3.svg', 'hearts_4.svg', 'hearts_5.svg', 'hearts_6.svg', 'hearts_7.svg', 'hearts_8.svg',\n  //   'hearts_9.svg', 'hearts_10.svg', 'hearts_ace.svg', 'hearts_jack.svg', 'hearts_king.svg', 'hearts_queen.svg',\n  //   'spades_2.svg', 'spades_3.svg', 'spades_4.svg', 'spades_5.svg', 'spades_6.svg', 'spades_7.svg', 'spades_8.svg', 'spades_9.svg',\n  //   'spades_10.svg', 'spades_ace.svg', 'spades_jack.svg', 'spades_king.svg', 'spades_queen.svg'];\n\n  let chatSocket = useRef();\n  let gameSocket = useRef(); //Modal Data\n\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleMessage = text => setMessage(text); //const { state } = useLocation();\n  // Code that is run immediately \n\n\n  useEffect(() => {\n    // connect to sockets\n    startWebSocket();\n    setTimeout(() => {\n      chatSocket.current = io(\"http://localhost:3003/chat/\" + roomID);\n      gameSocket.current = io(\"http://localhost:3003/game/\" + roomID);\n      chatSocket.current.on(\"text\", message => {\n        setMessages(array => [...array, message]);\n      });\n      gameSocket.current.on(\"start\", start => {\n        console.log(start);\n        setStartVisible(false);\n\n        if (initialGameState == 0) {\n          SetGameState(start);\n          initialGameState++;\n        }\n      });\n      gameSocket.current.on(\"update\", data => {\n        console.log(data);\n        SetGameState(data);\n      });\n    }, 1000);\n    return () => {\n      setMount({});\n    };\n  }, []); // Code to initialize chat web socket\n\n  async function startWebSocket() {\n    try {\n      console.log(\"roomID: \", roomID);\n      await axios.post(constants.HOST + \"/initialize\", {\n        roomID: roomID\n      }, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }); //setUser(await jwtDecode(token).username);\n    } catch (error) {\n      handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\");\n      handleShow();\n    }\n  } // Code that is called when chat is sent\n\n\n  const handleChat = async message => {\n    try {\n      console.log(\"roomID: \", roomID);\n      await axios.post(constants.HOST + \"/sendChat\", {\n        roomID: roomID,\n        message: message\n      }, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      handleMessage(\"Couldn't Send Chat Message. Try Again!\");\n      handleShow();\n    }\n  }; // Code called when Start Game button is clicked\n\n\n  async function handleStart() {\n    try {\n      await axios.put(constants.HOST + \"/start/\" + roomID, {}, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }); // Disable the start button\n\n      setDisableStart(true); // Display message that you're waiting for the other person to continue\n\n      setWaitVisible(true);\n    } catch (error) {\n      console.log(error);\n      handleMessage(\"Couldn't Start Game. Try Again!\");\n      handleShow();\n    }\n  }\n\n  function SetGameState(obj) {\n    // Create CardArray\n    let responseCard;\n\n    if (obj.cards) {\n      console.log(\"in Cards\");\n      setCard([]);\n\n      for (let i = 0; i < obj.cards.length; i++) {\n        responseCard = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: obj.cards[i].key,\n            className: \"card\",\n            onClick: e => flip(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"front\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                height: \"100\",\n                width: \"100\",\n                children: /*#__PURE__*/_jsxDEV(\"image\", {\n                  className: \"Card\",\n                  href: \"/img/castle.svg\",\n                  height: \"100\",\n                  width: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"back\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                height: \"100\",\n                width: \"100\",\n                children: /*#__PURE__*/_jsxDEV(\"image\", {\n                  className: \"Card\",\n                  href: \"/img/\" + obj.cards[i].key + \".svg\",\n                  height: \"100\",\n                  width: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)\n        }, obj.cards[i].key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 24\n        }, this);\n        console.log(\"IS ACtive: \", obj.cards.active);\n\n        if (!obj.cards[i].active) {\n          $(`#${obj.cards[i].key}`).css(\"visibility\", \"hidden\");\n        }\n\n        setCard(array => [...array, responseCard]);\n      }\n    } // set turn\n\n\n    if (obj.users) {\n      if (obj.users.filter(userObj => userObj.userID === user)) {\n        turn.current = obj.users.filter(userObj => userObj.userID === user)[0].turn;\n      } // Set who's turn it is in string form\n\n\n      if (obj.users.filter(userObj => userObj.turn === true)[0]) {\n        setPlayerTurn(obj.users.filter(userObj => userObj.turn === true)[0].userID.split(\"#\")[0]);\n      }\n    }\n  } // Responsible for flipping the cards\n\n\n  function flip(event) {\n    //increment count flip\n    console.log(turn.current);\n\n    if (turn.current) {\n      count += 1;\n      console.log(count);\n      const id = event.target.parentNode.parentNode.parentNode.id;\n\n      if (count === 1) {\n        pointArray.push(parseInt(id));\n        $(`#${id}`).css(\"pointer-events\", \"none\");\n        $(`#${id}`).toggleClass('flipped');\n      }\n\n      if (count === 2) {\n        console.log(\"hey id: \", id);\n        pointArray.push(parseInt(id));\n        console.log(pointArray);\n        $(`#${id}`).css(\"pointer-events\", \"none\");\n        $(`#${id}`).toggleClass('flipped'); // If cards match, disable immediately\n        // If not, flip back over and \n\n        if (!verifyFlip()) {\n          for (const card of pointArray) {\n            $(`#${card}`).toggleClass(\"flipped\");\n          }\n        }\n\n        pointArray = []; //$(`#${id}`).toggleClass('flipped');\n      }\n    }\n  }\n\n  ;\n\n  async function verifyFlip() {\n    // check if it's user's turn\n    const response = await axios.put(constants.HOST + \"/room/points\", {\n      roomID: roomID,\n      points: pointArray\n    }, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    });\n    return response.data.match;\n  } // HTML\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"Primary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), startVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startGame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"RoomID: \", roomID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), waitVisible ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Waiting for other person to start the game...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStart,\n        disabled: disableStart,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this) : null, !startVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"It's \", playerTurn, \"'s turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), card]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 24\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        messages: messages,\n        user: userObj,\n        onSubmit: handleChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"b29fuIbYGVHpx4yQJcYkeqz9p1s=\", false, function () {\n  return [useToken, useLocation];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/containers/Game.js"],"names":["React","useState","useEffect","useRef","useLocation","axios","constants","ChatBox","io","useToken","Modal","Button","$","data","Game","token","user","mount","setMount","messages","setMessages","card","setCard","startVisible","setStartVisible","disableStart","setDisableStart","waitVisible","setWaitVisible","initialGameState","state","roomID","turn","count","playerTurn","setPlayerTurn","pointArray","userObj","uid","chatSocket","gameSocket","show","setShow","message","setMessage","handleClose","handleShow","handleMessage","text","startWebSocket","setTimeout","current","on","array","start","console","log","SetGameState","post","HOST","headers","error","handleChat","handleStart","put","obj","responseCard","cards","i","length","key","e","flip","active","css","users","filter","userID","split","event","id","target","parentNode","push","parseInt","toggleClass","verifyFlip","response","points","match"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n//import Form from \"react-bootstrap/Form\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Game.css\";\r\nimport axios from \"axios\";\r\nimport * as constants from './Constants';\r\n//import { useLocation } from \"react-router\";\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport { ChatBox } from 'react-chatbox-component';\r\nimport io from \"socket.io-client\";\r\n//import $ from \"jquery\";\r\nimport useToken from \"../components/useToken\";\r\nimport { Modal } from \"react-bootstrap\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport $, { data } from 'jquery';\r\n\r\n\r\nexport default function Game() {\r\n  // Variables\r\n  //const [room, setRoom] = useState(\"\");\r\n  const { token, user } = useToken();\r\n  const [mount, setMount] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  const [card, setCard] = useState([]);\r\n  const [startVisible, setStartVisible] = useState(true);\r\n  const [disableStart, setDisableStart] = useState(false);\r\n  const [waitVisible, setWaitVisible] = useState(false);\r\n  let initialGameState = 0;\r\n  const { state } = useLocation();\r\n  const { roomID } = state;\r\n  //const [user, setUser] = useState(\"\");\r\n  const turn = useRef(false)\r\n  let count = 0;\r\n  const [playerTurn, setPlayerTurn] = useState(\"\");\r\n  let pointArray = [];\r\n  const userObj = {\r\n    uid: user\r\n  }\r\n  // const cardArray = ['clubs_2.svg', 'clubs_3.svg', 'clubs_4.svg', 'clubs_5.svg', 'clubs_6.svg', 'clubs_7.svg', 'clubs_8.svg',\r\n  //   'clubs_9.svg', 'clubs_10.svg', 'clubs_ace.svg', 'clubs_jack.svg', 'clubs_king.svg', 'clubs_queen.svg', 'diamonds_2.svg',\r\n  //   'diamonds_3.svg', 'diamonds_4.svg', 'diamonds_5.svg', 'diamonds_6.svg', 'diamonds_7.svg', 'diamonds_8.svg', 'diamonds_9.svg',\r\n  //   'diamonds_10.svg', 'diamonds_ace.svg', 'diamonds_jack.svg', 'diamonds_king.svg', 'diamonds_queen.svg',\r\n  //   'hearts_2.svg', 'hearts_3.svg', 'hearts_4.svg', 'hearts_5.svg', 'hearts_6.svg', 'hearts_7.svg', 'hearts_8.svg',\r\n  //   'hearts_9.svg', 'hearts_10.svg', 'hearts_ace.svg', 'hearts_jack.svg', 'hearts_king.svg', 'hearts_queen.svg',\r\n  //   'spades_2.svg', 'spades_3.svg', 'spades_4.svg', 'spades_5.svg', 'spades_6.svg', 'spades_7.svg', 'spades_8.svg', 'spades_9.svg',\r\n  //   'spades_10.svg', 'spades_ace.svg', 'spades_jack.svg', 'spades_king.svg', 'spades_queen.svg'];\r\n\r\n  let chatSocket = useRef();\r\n  let gameSocket = useRef();\r\n  //Modal Data\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(\"\")\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleMessage = (text) => setMessage(text)\r\n  //const { state } = useLocation();\r\n\r\n  // Code that is run immediately \r\n  useEffect(() => {\r\n    // connect to sockets\r\n    startWebSocket();\r\n    setTimeout(() => {\r\n      chatSocket.current = io(\"http://localhost:3003/chat/\" + roomID);\r\n      gameSocket.current = io(\"http://localhost:3003/game/\" + roomID);\r\n      chatSocket.current.on(\"text\", (message) => {\r\n        setMessages(array => [...array, message])\r\n      })\r\n      gameSocket.current.on(\"start\", (start) => {\r\n        console.log(start)\r\n        setStartVisible(false);\r\n        if (initialGameState == 0) {\r\n          SetGameState(start);\r\n          initialGameState++;\r\n        }\r\n\r\n      })\r\n      gameSocket.current.on(\"update\", (data) => {\r\n        console.log(data)\r\n        SetGameState(data)\r\n      })\r\n    }, 1000);\r\n    return () => { setMount({}); }\r\n  }, [])\r\n\r\n  // Code to initialize chat web socket\r\n  async function startWebSocket() {\r\n    try {\r\n      console.log(\"roomID: \", roomID)\r\n      await axios.post(constants.HOST + \"/initialize\", { roomID: roomID }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      //setUser(await jwtDecode(token).username);\r\n    } catch (error) {\r\n      handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Code that is called when chat is sent\r\n  const handleChat = async (message) => {\r\n    try {\r\n      console.log(\"roomID: \", roomID)\r\n      await axios.post(constants.HOST + \"/sendChat\", {\r\n        roomID: roomID,\r\n        message: message\r\n      }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleMessage(\"Couldn't Send Chat Message. Try Again!\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Code called when Start Game button is clicked\r\n  async function handleStart() {\r\n    try {\r\n      await axios.put(constants.HOST + \"/start/\" + roomID, {}, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      // Disable the start button\r\n      setDisableStart(true);\r\n      // Display message that you're waiting for the other person to continue\r\n      setWaitVisible(true);\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleMessage(\"Couldn't Start Game. Try Again!\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  function SetGameState(obj) {\r\n    // Create CardArray\r\n    let responseCard;\r\n    if (obj.cards) {\r\n      console.log(\"in Cards\")\r\n      setCard([])\r\n      for (let i = 0; i < obj.cards.length; i++) {\r\n        responseCard = <div key={obj.cards[i].key} className=\"cardContainer\">\r\n          <div id={obj.cards[i].key} className=\"card\" onClick={(e) => flip(e)}>\r\n            <div className=\"front\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100\" >\r\n                <image className=\"Card\" href=\"/img/castle.svg\" height=\"100\" width=\"100\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"back\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100\" >\r\n                <image className=\"Card\" href={\"/img/\" + obj.cards[i].key + \".svg\"} height=\"100\" width=\"100\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        console.log(\"IS ACtive: \", obj.cards.active)\r\n        if (!obj.cards[i].active) {\r\n          $(`#${obj.cards[i].key}`).css(\"visibility\", \"hidden\");\r\n        }\r\n        setCard(array => [...array, responseCard])\r\n      }\r\n    }\r\n    // set turn\r\n    if (obj.users) {\r\n      if (obj.users.filter(userObj => userObj.userID === user)) {\r\n        turn.current = obj.users.filter(userObj => userObj.userID === user)[0].turn\r\n      }\r\n      // Set who's turn it is in string form\r\n      if (obj.users.filter(userObj => userObj.turn === true)[0]) {\r\n        setPlayerTurn(obj.users.filter(userObj => userObj.turn === true)[0].userID.split(\"#\")[0])\r\n      }\r\n    }\r\n  }\r\n  // Responsible for flipping the cards\r\n  function flip(event) {\r\n    //increment count flip\r\n    console.log(turn.current)\r\n    if (turn.current) {\r\n      count += 1;\r\n      console.log(count)\r\n      const id = event.target.parentNode.parentNode.parentNode.id;\r\n      if (count === 1) {\r\n        pointArray.push(parseInt(id));\r\n        $(`#${id}`).css(\"pointer-events\", \"none\")\r\n        $(`#${id}`).toggleClass('flipped');\r\n      }\r\n      if (count === 2) {\r\n        console.log(\"hey id: \", id)\r\n        pointArray.push(parseInt(id))\r\n        console.log(pointArray)\r\n        $(`#${id}`).css(\"pointer-events\", \"none\")\r\n\r\n        $(`#${id}`).toggleClass('flipped');\r\n        // If cards match, disable immediately\r\n\r\n        // If not, flip back over and \r\n        if (!verifyFlip()) {\r\n          for (const card of pointArray) {\r\n            $(`#${card}`).toggleClass(\"flipped\")\r\n          }\r\n        }\r\n\r\n        pointArray = [];\r\n        //$(`#${id}`).toggleClass('flipped');\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  async function verifyFlip() {\r\n    // check if it's user's turn\r\n    const response = await axios.put(constants.HOST + \"/room/points\", { roomID: roomID, points: pointArray }, {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + token\r\n      }\r\n    });\r\n    return response.data.match;\r\n  }\r\n  // HTML\r\n  return (\r\n    <div id=\"container\">\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"Primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {startVisible ?\r\n        <div className=\"startGame\">\r\n          <h3>RoomID: {roomID}</h3>\r\n          {waitVisible ? <h4>Waiting for other person to start the game...</h4> : null}\r\n          <Button onClick={handleStart} disabled={disableStart}>Start Game</Button>\r\n        </div> : null}\r\n      {!startVisible ? <div className=\"Game\">\r\n        <h3>It's {playerTurn}'s turn</h3>\r\n        {/* <img src=\"/img/abstract_scene.svg\" className=\"Card\" height=\"200\" width=\"150\"/> */}\r\n        {/* <svg id=\"Container\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" viewBox=\"0 0 285 50\">\r\n          <rect height=\"200\" width=\"300\" />\r\n        </svg> */}\r\n        {card}\r\n      </div> : null}\r\n      <div className=\"Chat\">\r\n        <h3>Chat</h3>\r\n        <ChatBox messages={messages} user={userObj} onSubmit={handleChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}