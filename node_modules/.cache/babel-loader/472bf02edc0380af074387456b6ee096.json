{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezana\\\\OneDrive\\\\Desktop\\\\2021-2022 Fall\\\\SecureWebAppDev\\\\CardFlipper\\\\frontend\\\\src\\\\containers\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; //import Form from \"react-bootstrap/Form\";\n//import Button from \"react-bootstrap/Button\";\n\nimport \"../styles/Game.css\";\nimport axios from \"axios\";\nimport * as constants from './Constants'; //import { useLocation } from \"react-router\";\n\nimport 'react-chatbox-component/dist/style.css';\nimport { ChatBox } from 'react-chatbox-component';\nimport io from \"socket.io-client\"; //import $ from \"jquery\";\n\nimport useToken from \"../components/useToken\";\nimport jwtDecode from \"jwt-decode\";\nimport { Modal } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game(roomID) {\n  _s();\n\n  //const [room, setRoom] = useState(\"\");\n  const {\n    token\n  } = useToken();\n  const [messages, setMessages] = useState([]); //Modal Data\n\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleMessage = text => setMessage(text); //const { state } = useLocation();\n\n\n  const cardArray = [];\n  let chatSocket = useRef();\n  const user = {}; // Code that is called when chat is sent\n\n  const handleChat = message => {\n    if (message) {\n      console.log(user);\n      chatSocket.current.emit(\"message\", {\n        text: message,\n        token: token\n      });\n    }\n  }; // Code that is run immediately \n\n\n  useEffect(() => {\n    chatSocket.current = io(\"http://localhost:3003/chat\");\n    chatSocket.current.on(\"text\", message => {\n      setMessages(array => [...array, message]);\n    });\n\n    async function startWebSocket() {\n      try {\n        const response = await axios.post(constants.HOST + \"/game\", {}, {\n          headers: {\n            \"Authorization\": \"Bearer \" + token\n          }\n        });\n        user.uid = await jwtDecode(token).username;\n      } catch (error) {\n        handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\");\n        handleShow();\n      }\n    }\n\n    startWebSocket();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"Primary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"svg\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: cardArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {\n        messages: messages,\n        user: user,\n        onSubmit: handleChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"8hIpUma9M3fAq+PyjPVYiwbCsig=\", false, function () {\n  return [useToken];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/containers/Game.js"],"names":["React","useState","useEffect","useRef","axios","constants","ChatBox","io","useToken","jwtDecode","Modal","Form","Button","Game","roomID","token","messages","setMessages","show","setShow","message","setMessage","handleClose","handleShow","handleMessage","text","cardArray","chatSocket","user","handleChat","console","log","current","emit","on","array","startWebSocket","response","post","HOST","headers","uid","username","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n//import Form from \"react-bootstrap/Form\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Game.css\";\r\nimport axios from \"axios\";\r\nimport * as constants from './Constants';\r\n//import { useLocation } from \"react-router\";\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport { ChatBox } from 'react-chatbox-component';\r\nimport io from \"socket.io-client\";\r\n//import $ from \"jquery\";\r\nimport useToken from \"../components/useToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Modal } from \"react-bootstrap\"\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\n\r\nexport default function Game(roomID) {\r\n  //const [room, setRoom] = useState(\"\");\r\n  const { token } = useToken();\r\n  const [messages, setMessages] = useState([]);\r\n  //Modal Data\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(\"\")\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleMessage= (text) => setMessage(text)\r\n  //const { state } = useLocation();\r\n  const cardArray = [];\r\n  let chatSocket = useRef();\r\n  const user = {}\r\n\r\n  // Code that is called when chat is sent\r\n  const handleChat = (message) => {\r\n    if (message) {\r\n      console.log(user)\r\n      chatSocket.current.emit(\"message\", {\r\n        text: message,\r\n        token: token\r\n      });\r\n    }\r\n  }\r\n  // Code that is run immediately \r\n  useEffect(() => {\r\n    chatSocket.current = io(\"http://localhost:3003/chat\");\r\n    chatSocket.current.on(\"text\", (message) => {\r\n      setMessages( array => [...array, message])\r\n    })\r\n    async function startWebSocket() {\r\n      try {\r\n        const response = await axios.post(constants.HOST + \"/game\", {}, {\r\n          headers: {\r\n            \"Authorization\": \"Bearer \" + token\r\n          }\r\n        });\r\n        user.uid = await jwtDecode(token).username;\r\n      } catch(error) {\r\n        handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\")\r\n        handleShow();\r\n      }\r\n    }\r\n    startWebSocket();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"Primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"Game\">\r\n        {/* <img src=\"/img/abstract_scene.svg\" className=\"Card\" height=\"200\" width=\"150\"/> */}\r\n        <svg id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          {cardArray}\r\n        </svg>\r\n      </div>\r\n      <div className=\"Chat\">\r\n        <ChatBox messages={messages} user={user} onSubmit={handleChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}