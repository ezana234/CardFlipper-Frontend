{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezana\\\\OneDrive\\\\Desktop\\\\2021-2022 Fall\\\\SecureWebAppDev\\\\CardFlipper\\\\frontend\\\\src\\\\containers\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation, unmountComponentAtNode } from 'react-router-dom'; //import Form from \"react-bootstrap/Form\";\n//import Button from \"react-bootstrap/Button\";\n\nimport \"../styles/Game.css\";\nimport axios from \"axios\";\nimport * as constants from './Constants'; //import { useLocation } from \"react-router\";\n\nimport 'react-chatbox-component/dist/style.css';\nimport { ChatBox } from 'react-chatbox-component';\nimport io from \"socket.io-client\"; //import $ from \"jquery\";\n\nimport useToken from \"../components/useToken\";\nimport jwtDecode from \"jwt-decode\";\nimport { Modal } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n\n  // Variables\n  //const [room, setRoom] = useState(\"\");\n  const {\n    token,\n    user\n  } = useToken();\n  const [mount, setMount] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [card, setCard] = useState([]);\n  const [startVisible, setStartVisible] = useState(true);\n  const [disableStart, setDisableStart] = useState(false);\n  const [waitVisible, setWaitVisible] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const {\n    roomID\n  } = state; //const [user, setUser] = useState(\"\");\n\n  const [turn, setTurn] = useState(false);\n  const [playerTurn, setPlayerTurn] = useState(\"\");\n  const userObj = {\n    uid: user\n  }; // const cardArray = ['clubs_2.svg', 'clubs_3.svg', 'clubs_4.svg', 'clubs_5.svg', 'clubs_6.svg', 'clubs_7.svg', 'clubs_8.svg',\n  //   'clubs_9.svg', 'clubs_10.svg', 'clubs_ace.svg', 'clubs_jack.svg', 'clubs_king.svg', 'clubs_queen.svg', 'diamonds_2.svg',\n  //   'diamonds_3.svg', 'diamonds_4.svg', 'diamonds_5.svg', 'diamonds_6.svg', 'diamonds_7.svg', 'diamonds_8.svg', 'diamonds_9.svg',\n  //   'diamonds_10.svg', 'diamonds_ace.svg', 'diamonds_jack.svg', 'diamonds_king.svg', 'diamonds_queen.svg',\n  //   'hearts_2.svg', 'hearts_3.svg', 'hearts_4.svg', 'hearts_5.svg', 'hearts_6.svg', 'hearts_7.svg', 'hearts_8.svg',\n  //   'hearts_9.svg', 'hearts_10.svg', 'hearts_ace.svg', 'hearts_jack.svg', 'hearts_king.svg', 'hearts_queen.svg',\n  //   'spades_2.svg', 'spades_3.svg', 'spades_4.svg', 'spades_5.svg', 'spades_6.svg', 'spades_7.svg', 'spades_8.svg', 'spades_9.svg',\n  //   'spades_10.svg', 'spades_ace.svg', 'spades_jack.svg', 'spades_king.svg', 'spades_queen.svg'];\n\n  let chatSocket = useRef();\n  let gameSocket = useRef(); //Modal Data\n\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleMessage = text => setMessage(text); //const { state } = useLocation();\n  // Code that is run immediately \n\n\n  useEffect(() => {\n    // connect to sockets\n    startWebSocket();\n    setTimeout(() => {}, 1000);\n    chatSocket.current = io(\"http://localhost:3003/chat/\" + roomID);\n    gameSocket.current = io(\"http://localhost:3003/game/\" + roomID);\n    chatSocket.current.on(\"text\", message => {\n      console.log(message);\n      setMessages(array => [...array, message]);\n    });\n    gameSocket.current.on(\"start\", start => {\n      setStartVisible(false);\n      getGameState();\n      return;\n    });\n    return () => {\n      setMount({});\n    };\n  }, []); // Code to initialize chat web socket\n\n  async function startWebSocket() {\n    try {\n      console.log(\"roomID: \", roomID);\n      await axios.post(constants.HOST + \"/initialize\", {\n        roomID: roomID\n      }, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }); //setUser(await jwtDecode(token).username);\n    } catch (error) {\n      handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\");\n      handleShow();\n    }\n  } // Code that is called when chat is sent\n\n\n  const handleChat = async message => {\n    try {\n      console.log(\"roomID: \", roomID);\n      await axios.post(constants.HOST + \"/sendChat\", {\n        roomID: roomID,\n        message: message\n      }, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      handleMessage(\"Couldn't Send Chat Message. Try Again!\");\n      handleShow();\n    }\n  }; // Code called when Start Game button is clicked\n\n\n  async function handleStart() {\n    try {\n      await axios.put(constants.HOST + \"/start/\" + roomID, {}, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      }); // Disable the start button\n\n      setDisableStart(true); // Display message that you're waiting for the other person to continue\n\n      setWaitVisible(true);\n    } catch (error) {\n      console.log(error);\n      handleMessage(\"Couldn't Start Game. Try Again!\");\n      handleShow();\n    }\n  }\n\n  async function getGameState() {\n    try {\n      const response = await axios.get(constants.HOST + \"/room/\" + roomID, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token\n        }\n      });\n      console.log(response.data.cards); // Clear Array\n\n      setCard([]); // Create CardArray\n\n      let responseCard;\n\n      for (let i = 0; i < response.data.cards.length; i++) {\n        responseCard = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: response.data.cards[i].key,\n            className: \"card\",\n            onClick: e => flip(e),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"front\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                height: \"100\",\n                width: \"100\",\n                children: /*#__PURE__*/_jsxDEV(\"image\", {\n                  className: \"Card\",\n                  href: \"/img/castle.svg\",\n                  height: \"100\",\n                  width: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"back\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                height: \"100\",\n                width: \"100\",\n                children: /*#__PURE__*/_jsxDEV(\"image\", {\n                  className: \"Card\",\n                  href: \"/img/\" + response.data.cards[i].key + \".svg\",\n                  height: \"100\",\n                  width: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this)\n        }, response.data.cards[i].key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 24\n        }, this);\n        setCard(array => [...array, responseCard]);\n      } // set turn\n\n\n      console.log(user);\n      console.log(response.data.users);\n\n      for (let i = 0; i < response.data.users.length; i++) {\n        if (response.data.users[i].userID === user) {\n          console.log(\"what\");\n          setTurn(response.data.users[i].turn);\n        }\n\n        if (response.data.users[i].turn) {}\n      }\n    } catch (error) {\n      handleMessage(\"Couldn't Get Cards! Try Again\");\n      handleShow();\n    }\n  } // Responsible for flipping the cards\n\n\n  function flip(event) {\n    console.log(event);\n    verifyFlip();\n    const id = event.target.parentNode.parentNode.parentNode.id;\n    $(`#${id}`).css(\"pointer-events\", \"none\");\n    $(`#${id}`).toggleClass('flipped');\n  }\n\n  ;\n\n  async function verifyFlip() {\n    // check if it's user's turn\n    try {} catch (error) {\n      handleMessage(\"Couldn't Get Cards! Try Again\");\n      handleShow();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"Primary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), startVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"startGame\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"RoomID: \", roomID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), waitVisible ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Waiting for other person to start the game...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleStart,\n        disabled: disableStart,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this) : null, !startVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 24\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        messages: messages,\n        user: userObj,\n        onSubmit: handleChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"vNrgOf9PSfABoEE1lApeAG0Pmw4=\", false, function () {\n  return [useToken, useLocation];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/containers/Game.js"],"names":["React","useState","useEffect","useRef","useLocation","unmountComponentAtNode","axios","constants","ChatBox","io","useToken","jwtDecode","Modal","Button","$","Game","token","user","mount","setMount","messages","setMessages","card","setCard","startVisible","setStartVisible","disableStart","setDisableStart","waitVisible","setWaitVisible","state","roomID","turn","setTurn","playerTurn","setPlayerTurn","userObj","uid","chatSocket","gameSocket","show","setShow","message","setMessage","handleClose","handleShow","handleMessage","text","startWebSocket","setTimeout","current","on","console","log","array","start","getGameState","post","HOST","headers","error","handleChat","handleStart","put","response","get","data","cards","responseCard","i","length","key","e","flip","users","userID","event","verifyFlip","id","target","parentNode","css","toggleClass"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useLocation, unmountComponentAtNode } from 'react-router-dom';\r\n//import Form from \"react-bootstrap/Form\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Game.css\";\r\nimport axios from \"axios\";\r\nimport * as constants from './Constants';\r\n//import { useLocation } from \"react-router\";\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport { ChatBox } from 'react-chatbox-component';\r\nimport io from \"socket.io-client\";\r\n//import $ from \"jquery\";\r\nimport useToken from \"../components/useToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Modal } from \"react-bootstrap\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport $ from 'jquery';\r\n\r\n\r\nexport default function Game() {\r\n  // Variables\r\n  //const [room, setRoom] = useState(\"\");\r\n  const { token, user } = useToken();\r\n  const [mount, setMount] = useState({});\r\n  const [messages, setMessages] = useState([]);\r\n  const [card, setCard] = useState([]);\r\n  const [startVisible, setStartVisible] = useState(true);\r\n  const [disableStart, setDisableStart] = useState(false);\r\n  const [waitVisible, setWaitVisible] = useState(false);\r\n  const { state } = useLocation();\r\n  const { roomID } = state;\r\n  //const [user, setUser] = useState(\"\");\r\n  const [turn, setTurn] = useState(false);\r\n  const [playerTurn, setPlayerTurn] = useState(\"\");\r\n  const userObj = {\r\n    uid: user\r\n  }\r\n  // const cardArray = ['clubs_2.svg', 'clubs_3.svg', 'clubs_4.svg', 'clubs_5.svg', 'clubs_6.svg', 'clubs_7.svg', 'clubs_8.svg',\r\n  //   'clubs_9.svg', 'clubs_10.svg', 'clubs_ace.svg', 'clubs_jack.svg', 'clubs_king.svg', 'clubs_queen.svg', 'diamonds_2.svg',\r\n  //   'diamonds_3.svg', 'diamonds_4.svg', 'diamonds_5.svg', 'diamonds_6.svg', 'diamonds_7.svg', 'diamonds_8.svg', 'diamonds_9.svg',\r\n  //   'diamonds_10.svg', 'diamonds_ace.svg', 'diamonds_jack.svg', 'diamonds_king.svg', 'diamonds_queen.svg',\r\n  //   'hearts_2.svg', 'hearts_3.svg', 'hearts_4.svg', 'hearts_5.svg', 'hearts_6.svg', 'hearts_7.svg', 'hearts_8.svg',\r\n  //   'hearts_9.svg', 'hearts_10.svg', 'hearts_ace.svg', 'hearts_jack.svg', 'hearts_king.svg', 'hearts_queen.svg',\r\n  //   'spades_2.svg', 'spades_3.svg', 'spades_4.svg', 'spades_5.svg', 'spades_6.svg', 'spades_7.svg', 'spades_8.svg', 'spades_9.svg',\r\n  //   'spades_10.svg', 'spades_ace.svg', 'spades_jack.svg', 'spades_king.svg', 'spades_queen.svg'];\r\n\r\n  let chatSocket = useRef();\r\n  let gameSocket = useRef();\r\n  //Modal Data\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(\"\")\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleMessage = (text) => setMessage(text)\r\n  //const { state } = useLocation();\r\n\r\n  // Code that is run immediately \r\n  useEffect(() => {\r\n    // connect to sockets\r\n    startWebSocket();\r\n    setTimeout(() => { }, 1000);\r\n    chatSocket.current = io(\"http://localhost:3003/chat/\" + roomID);\r\n    gameSocket.current = io(\"http://localhost:3003/game/\" + roomID);\r\n    chatSocket.current.on(\"text\", (message) => {\r\n      console.log(message)\r\n      setMessages(array => [...array, message])\r\n    })\r\n    gameSocket.current.on(\"start\", (start) => {\r\n      setStartVisible(false)\r\n      getGameState();\r\n      return;\r\n    })\r\n    return () => { setMount({}); }\r\n  }, [])\r\n\r\n  // Code to initialize chat web socket\r\n  async function startWebSocket() {\r\n    try {\r\n      console.log(\"roomID: \", roomID)\r\n      await axios.post(constants.HOST + \"/initialize\", { roomID: roomID }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      //setUser(await jwtDecode(token).username);\r\n    } catch (error) {\r\n      handleMessage(\"Couldn't Connect To Socket. Try Refreshing the Page.\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Code that is called when chat is sent\r\n  const handleChat = async (message) => {\r\n    try {\r\n      console.log(\"roomID: \", roomID)\r\n      await axios.post(constants.HOST + \"/sendChat\", {\r\n        roomID: roomID,\r\n        message: message\r\n      }, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleMessage(\"Couldn't Send Chat Message. Try Again!\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Code called when Start Game button is clicked\r\n  async function handleStart() {\r\n    try {\r\n      await axios.put(constants.HOST + \"/start/\" + roomID, {}, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      // Disable the start button\r\n      setDisableStart(true);\r\n      // Display message that you're waiting for the other person to continue\r\n      setWaitVisible(true);\r\n    } catch (error) {\r\n      console.log(error)\r\n      handleMessage(\"Couldn't Start Game. Try Again!\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  async function getGameState() {\r\n    try {\r\n      const response = await axios.get(constants.HOST + \"/room/\" + roomID, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token\r\n        }\r\n      });\r\n      console.log(response.data.cards)\r\n      // Clear Array\r\n      setCard([])\r\n      // Create CardArray\r\n      let responseCard;\r\n      for (let i = 0; i < response.data.cards.length; i++) {\r\n        responseCard = <div key={response.data.cards[i].key} className=\"cardContainer\">\r\n          <div id={response.data.cards[i].key} className=\"card\" onClick={(e) => flip(e)}>\r\n            <div className=\"front\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100\" >\r\n                <image className=\"Card\" href=\"/img/castle.svg\" height=\"100\" width=\"100\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"back\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100\" >\r\n                <image className=\"Card\" href={\"/img/\"+ response.data.cards[i].key + \".svg\"} height=\"100\" width=\"100\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        setCard(array => [...array, responseCard])\r\n      }\r\n      // set turn\r\n      console.log(user)\r\n      console.log(response.data.users)\r\n      for(let i =0; i < response.data.users.length; i++) {\r\n        if(response.data.users[i].userID === user) {\r\n          console.log(\"what\");\r\n          setTurn(response.data.users[i].turn)\r\n        }\r\n        if(response.data.users[i].turn) {\r\n          \r\n        }\r\n      }\r\n    } catch (error) {\r\n      handleMessage(\"Couldn't Get Cards! Try Again\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  // Responsible for flipping the cards\r\n  function flip(event) {\r\n    console.log(event)\r\n    verifyFlip();\r\n    const id = event.target.parentNode.parentNode.parentNode.id;\r\n    $(`#${id}`).css(\"pointer-events\",\"none\")\r\n    $(`#${id}`).toggleClass('flipped');\r\n  };\r\n\r\n  async function verifyFlip() {\r\n    // check if it's user's turn\r\n    try  {\r\n      \r\n    } catch(error) {\r\n      handleMessage(\"Couldn't Get Cards! Try Again\")\r\n      handleShow();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"Primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      {startVisible ?\r\n        <div className=\"startGame\">\r\n          <h3>RoomID: {roomID}</h3>\r\n          {waitVisible ? <h4>Waiting for other person to start the game...</h4> : null}\r\n          <Button onClick={handleStart} disabled={disableStart}>Start Game</Button>\r\n        </div> : null}\r\n      {!startVisible ? <div className=\"Game\">\r\n        {/* <img src=\"/img/abstract_scene.svg\" className=\"Card\" height=\"200\" width=\"150\"/> */}\r\n        {/* <svg id=\"Container\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" viewBox=\"0 0 285 50\">\r\n          <rect height=\"200\" width=\"300\" />\r\n        </svg> */}\r\n        {card}\r\n      </div> : null}\r\n      <div className=\"Chat\">\r\n        <h3>Chat</h3>\r\n        <ChatBox messages={messages} user={userObj} onSubmit={handleChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}