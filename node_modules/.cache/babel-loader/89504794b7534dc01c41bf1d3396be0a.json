{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import jwt from 'jwt-decode';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from 'axios';\nimport * as CONSTANTS from '../containers/Constants';\nimport jwtDecode from \"jwt-decode\";\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  };\n\n  const getUser = () => {\n    const userString = localStorage.getItem('user');\n    const user = JSON.parse(userString);\n    return user;\n  };\n\n  const [token, setToken] = useState(getToken());\n  const [user, setUser] = useState(get);\n\n  const saveToken = async userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n\n    try {\n      const user = await jwtDecode(userToken).username;\n      console.log(user);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n    } catch (err) {}\n  };\n\n  const deleteToken = () => {\n    localStorage.removeItem('token');\n  }; // const verifyToken = (token) => {\n  //   console.log(\"token\", token )\n  //   if (!token) {\n  //     return false;\n  //   }\n  //   try {\n  //     let decodedToken = jwt(token);\n  //     let dateNow = new Date();\n  //     console.log(\"decoded\", decodedToken)\n  //     if (decodedToken.exp < new Date() / 1000) {\n  //       return false;\n  //     }\n  //     return true;\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n\n\n  const tokenExists = token => {\n    axios.get(CONSTANTS.HOST + \"/user\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token.token\n      }\n    }).then(response => {\n      console.log(response);\n      return true;\n    }).catch(error => {\n      console.log(error);\n      return false;\n    });\n  };\n\n  return {\n    token,\n    user,\n    setToken: saveToken,\n    //checkVerifiedToken: verifyToken,\n    tokenExists,\n    removeToken: deleteToken\n  };\n}\n\n_s(useToken, \"PuvgsVxr3pnIHKxPu1xbYEKJzpw=\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/components/useToken.js"],"names":["useState","axios","CONSTANTS","jwtDecode","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","getUser","userString","user","token","setToken","setUser","get","saveToken","setItem","stringify","username","console","log","err","deleteToken","removeItem","tokenExists","HOST","headers","then","response","catch","error","removeToken"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP;AACD,GAJD;;AAMA,QAAMG,OAAO,GAAG,MAAM;AACpB,UAAMC,UAAU,GAAGN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACA,UAAMM,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWE,UAAX,CAAb;AACA,WAAOC,IAAP;AACD,GAJD;;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACK,QAAQ,EAAT,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOG,OAAP,IAAkBjB,QAAQ,CAACkB,GAAD,CAAhC;;AAEA,QAAMC,SAAS,GAAG,MAAMV,SAAN,IAAmB;AACnCF,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAeZ,SAAf,CAA9B;AACAO,IAAAA,QAAQ,CAACP,SAAS,CAACM,KAAX,CAAR;;AACA,QAAI;AACF,YAAMD,IAAI,GAAG,MAAMX,SAAS,CAACM,SAAD,CAAT,CAAqBa,QAAxC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6BV,IAAI,CAACW,SAAL,CAAeP,IAAf,CAA7B;AACAG,MAAAA,OAAO,CAACH,IAAD,CAAP;AACD,KALD,CAKE,OAAOW,GAAP,EAAY,CAEb;AACF,GAXD;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACxBnB,IAAAA,YAAY,CAACoB,UAAb,CAAwB,OAAxB;AACD,GAFD,CA7BiC,CAiCjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,WAAW,GAAIb,KAAD,IAAW;AAC7Bd,IAAAA,KAAK,CAACiB,GAAN,CAAUhB,SAAS,CAAC2B,IAAV,GAAiB,OAA3B,EAAoC;AAClCC,MAAAA,OAAO,EAAE;AACP,yBAAiB,YAAYf,KAAK,CAACA;AAD5B;AADyB,KAApC,EAIGgB,IAJH,CAIQC,QAAQ,IAAI;AAClBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACA,aAAO,IAAP;AACD,KAPD,EAOGC,KAPH,CAOSC,KAAK,IAAI;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAO,KAAP;AACD,KAVD;AAWD,GAZD;;AAcA,SAAO;AACLnB,IAAAA,KADK;AAELD,IAAAA,IAFK;AAGLE,IAAAA,QAAQ,EAAEG,SAHL;AAIL;AACAS,IAAAA,WALK;AAMLO,IAAAA,WAAW,EAAET;AANR,GAAP;AAQD;;GA1EuBtB,Q","sourcesContent":["import { useState } from 'react';\r\n//import jwt from 'jwt-decode';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport axios from 'axios';\r\nimport * as CONSTANTS from '../containers/Constants';\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken\r\n  };\r\n\r\n  const getUser = () => {\r\n    const userString = localStorage.getItem('user');\r\n    const user = JSON.parse(userString);\r\n    return user\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n  const [user, setUser] = useState(get);\r\n\r\n  const saveToken = async userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n    try {\r\n      const user = await jwtDecode(userToken).username;\r\n      console.log(user)\r\n      localStorage.setItem('user', JSON.stringify(user))\r\n      setUser(user);\r\n    } catch (err) {\r\n\r\n    }\r\n  };\r\n\r\n  const deleteToken = () => {\r\n    localStorage.removeItem('token')\r\n  }\r\n\r\n  // const verifyToken = (token) => {\r\n  //   console.log(\"token\", token )\r\n  //   if (!token) {\r\n  //     return false;\r\n  //   }\r\n  //   try {\r\n  //     let decodedToken = jwt(token);\r\n  //     let dateNow = new Date();\r\n  //     console.log(\"decoded\", decodedToken)\r\n\r\n  //     if (decodedToken.exp < new Date() / 1000) {\r\n  //       return false;\r\n  //     }\r\n  //     return true;\r\n  //   } catch (err) {\r\n  //     console.log(err)\r\n  //   }\r\n  // }\r\n\r\n  const tokenExists = (token) => {\r\n    axios.get(CONSTANTS.HOST + \"/user\", {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + token.token\r\n      }\r\n    }).then(response => {\r\n      console.log(response)\r\n      return true;\r\n    }).catch(error => {\r\n      console.log(error)\r\n      return false;\r\n    })\r\n  }\r\n\r\n  return {\r\n    token,\r\n    user,\r\n    setToken: saveToken,\r\n    //checkVerifiedToken: verifyToken,\r\n    tokenExists,\r\n    removeToken: deleteToken\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}