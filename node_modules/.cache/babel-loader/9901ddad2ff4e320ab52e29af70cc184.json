{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jwt } from 'jsonwebtoken';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    console.log(userToken);\n    return userToken;\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    localStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  const verifyToken = async token => {\n    let decodedToken = jwt.decode(token, {\n      complete: true\n    });\n    let dateNow = new Date();\n\n    if (decodedToken.exp < dateNow.getTime()) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return {\n    token,\n    setToken: saveToken,\n    checkVerifiedToken: verifyToken\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/components/useToken.js"],"names":["useState","jwt","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","console","log","token","setToken","saveToken","setItem","stringify","verifyToken","decodedToken","decode","complete","dateNow","Date","exp","getTime","checkVerifiedToken"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,WAAOA,SAAP;AACD,GALD;;AAOA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACG,QAAQ,EAAT,CAAlC;;AAEA,QAAMW,SAAS,GAAGP,SAAS,IAAI;AAC7BF,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAeT,SAAf,CAA9B;AACAM,IAAAA,QAAQ,CAACN,SAAS,CAACK,KAAX,CAAR;AACD,GAHD;;AAKA,QAAMK,WAAW,GAAG,MAAOL,KAAP,IAAiB;AACnC,QAAIM,YAAY,GAAGjB,GAAG,CAACkB,MAAJ,CAAWP,KAAX,EAAkB;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAlB,CAAnB;AACA,QAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;;AAEA,QAAIJ,YAAY,CAACK,GAAb,GAAmBF,OAAO,CAACG,OAAR,EAAvB,EAAyC;AACvC,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GARD;;AAUA,SAAO;AACLZ,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAEC,SAFL;AAGLW,IAAAA,kBAAkB,EAAER;AAHf,GAAP;AAKD;;GA9BuBf,Q","sourcesContent":["import { useState } from 'react';\r\nimport { jwt } from 'jsonwebtoken';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    console.log(userToken)\r\n    return userToken\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  const verifyToken = async (token) => {\r\n    let decodedToken = jwt.decode(token, { complete: true });\r\n    let dateNow = new Date();\r\n\r\n    if (decodedToken.exp < dateNow.getTime()){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    token,\r\n    setToken: saveToken,\r\n    checkVerifiedToken: verifyToken\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}