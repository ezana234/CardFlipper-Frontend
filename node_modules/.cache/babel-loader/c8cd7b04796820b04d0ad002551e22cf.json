{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezana\\\\OneDrive\\\\Desktop\\\\2021-2022 Fall\\\\SecureWebAppDev\\\\CardFlipper\\\\frontend\\\\src\\\\containers\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; //import Form from \"react-bootstrap/Form\";\n//import Button from \"react-bootstrap/Button\";\n\nimport \"../styles/Game.css\"; //import axios from \"axios\";\n//import { useLocation } from \"react-router\";\n\nimport 'react-chatbox-component/dist/style.css';\nimport { ChatBox } from 'react-chatbox-component';\nimport io from \"socket.io-client\"; //import $ from \"jquery\";\n\nimport useToken from \"../components/useToken\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game(roomID) {\n  _s();\n\n  //const [room, setRoom] = useState(\"\");\n  const {\n    token\n  } = useToken();\n  const [messages, setMessages] = useState([]); //const { state } = useLocation();\n\n  const cardArray = [];\n  let user;\n  let chatSocket = useRef(); // Code that is called when chat is sent\n\n  const handleChat = message => {\n    if (message) {\n      chatSocket.current.emit(\"message\", {\n        text: message,\n        token: token\n      });\n    }\n  }; // Code that is run immediately \n\n\n  useEffect(async () => {\n    chatSocket.current = io(\"http://localhost:3003/chat\");\n    chatSocket.current.on(\"text\", message => {\n      setMessages(array => [...array, message]);\n    });\n\n    try {\n      user = await jwtDecode(token);\n      console.log(user);\n    } catch (error) {\n      console.log(\"Invalid JWT\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"svg\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: cardArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: /*#__PURE__*/_jsxDEV(ChatBox, {\n        messages: messages,\n        onSubmit: handleChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"tb+l3oVEDWUx2X4I5C0hlAuqQks=\", false, function () {\n  return [useToken];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/frontend/src/containers/Game.js"],"names":["React","useState","useEffect","useRef","ChatBox","io","useToken","jwtDecode","Game","roomID","token","messages","setMessages","cardArray","user","chatSocket","handleChat","message","current","emit","text","on","array","console","log","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CACA;AACA;;AACA,OAAO,oBAAP,C,CACA;AACA;;AACA,OAAO,wCAAP;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAIA,eAAe,SAASC,IAAT,CAAcC,MAAd,EAAsB;AAAA;;AACnC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,QAAQ,EAA1B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAHmC,CAInC;;AACA,QAAMY,SAAS,GAAG,EAAlB;AACA,MAAIC,IAAJ;AACA,MAAIC,UAAU,GAAGZ,MAAM,EAAvB,CAPmC,CASnC;;AACA,QAAMa,UAAU,GAAIC,OAAD,IAAa;AAC9B,QAAIA,OAAJ,EAAa;AACXF,MAAAA,UAAU,CAACG,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB,EAAmC;AACjCC,QAAAA,IAAI,EAAEH,OAD2B;AAEjCP,QAAAA,KAAK,EAAEA;AAF0B,OAAnC;AAID;AACF,GAPD,CAVmC,CAkBnC;;;AACAR,EAAAA,SAAS,CAAC,YAAY;AACpBa,IAAAA,UAAU,CAACG,OAAX,GAAqBb,EAAE,CAAC,4BAAD,CAAvB;AACAU,IAAAA,UAAU,CAACG,OAAX,CAAmBG,EAAnB,CAAsB,MAAtB,EAA+BJ,OAAD,IAAa;AACzCL,MAAAA,WAAW,CAAEU,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWL,OAAX,CAAX,CAAX;AACD,KAFD;;AAGA,QAAI;AACFH,MAAAA,IAAI,GAAG,MAAMP,SAAS,CAACG,KAAD,CAAtB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,KAHD,CAGE,OAAMW,KAAN,EAAa;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BAEE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,KAAK,EAAC,4BAApB;AAAA,kBACGX;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEF,QAAnB;AAA6B,QAAA,QAAQ,EAAEK;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7CuBR,I;UAEJF,Q;;;KAFIE,I","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n//import Form from \"react-bootstrap/Form\";\r\n//import Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Game.css\";\r\n//import axios from \"axios\";\r\n//import { useLocation } from \"react-router\";\r\nimport 'react-chatbox-component/dist/style.css';\r\nimport { ChatBox } from 'react-chatbox-component';\r\nimport io from \"socket.io-client\";\r\n//import $ from \"jquery\";\r\nimport useToken from \"../components/useToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\n\r\nexport default function Game(roomID) {\r\n  //const [room, setRoom] = useState(\"\");\r\n  const { token } = useToken();\r\n  const [messages, setMessages] = useState([]);\r\n  //const { state } = useLocation();\r\n  const cardArray = [];\r\n  let user;\r\n  let chatSocket = useRef();\r\n\r\n  // Code that is called when chat is sent\r\n  const handleChat = (message) => {\r\n    if (message) {\r\n      chatSocket.current.emit(\"message\", {\r\n        text: message,\r\n        token: token\r\n      })\r\n    }\r\n  }\r\n  // Code that is run immediately \r\n  useEffect(async () => {\r\n    chatSocket.current = io(\"http://localhost:3003/chat\");\r\n    chatSocket.current.on(\"text\", (message) => {\r\n      setMessages( array => [...array, message])\r\n    })\r\n    try {\r\n      user = await jwtDecode(token);\r\n      console.log(user)\r\n    } catch(error) {\r\n      console.log(\"Invalid JWT\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Game\">\r\n        {/* <img src=\"/img/abstract_scene.svg\" className=\"Card\" height=\"200\" width=\"150\"/> */}\r\n        <svg id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          {cardArray}\r\n        </svg>\r\n      </div>\r\n      <div className=\"Chat\">\r\n        <ChatBox messages={messages} onSubmit={handleChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}