{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezana\\\\OneDrive\\\\Desktop\\\\2021-2022 Fall\\\\SecureWebAppDev\\\\CardFlipper\\\\CardFlipper\\\\CardFlipper\\\\frontend\\\\src\\\\containers\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/Dashboard.css\";\nimport axios from \"axios\";\nimport * as constants from './Constants';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard(token) {\n  _s();\n\n  const [room, setRoom] = useState(\"\");\n  const navigate = useNavigate(); //Modal Data\n\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleMessage = text => setMessage(text); // This function validates the form\n\n\n  function validateForm() {\n    return room.length > 8 && room.length < 14;\n  } // THis function sends a request to the backend to create a room\n\n\n  async function createRoom(event) {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post(constants.HOST + \"/room\", {}, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token.token\n        }\n      });\n      const roomID = response.data.roomID;\n      console.log(roomID);\n      navigate(\"/game\", {\n        state: {\n          roomID: roomID\n        }\n      });\n    } catch (error) {\n      handleMessage(\"Couldn't Create Room. Try Again\");\n      handleShow();\n    }\n  } // This sends a request to join a room\n\n\n  async function joinRoom(event) {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post(constants.HOST + \"/joinroom\", {\n        roomID: room\n      }, {\n        headers: {\n          \"Authorization\": \"Bearer \" + token.token\n        }\n      });\n      const roomID = response.data.roomID;\n      navigate(\"/game\", {\n        state: {\n          roomID: roomID\n        }\n      });\n    } catch (error) {\n      console.log(error); // The Room ID is not in the DB or the token isn't valid or network error\n\n      handleMessage(\"Couldn't Join Room. Try Again!\");\n      handleShow();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: [\"/**f */\", /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"Primary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: joinRoom,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"joinRoom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"room\",\n          value: room,\n          onChange: e => setRoom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !validateForm(),\n        children: \"Go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: createRoom,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"createRoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        type: \"submit\",\n        children: \"Create Room!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Ji0MoVkKZ4CpbMqKfNqXQb848v0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/ezana/OneDrive/Desktop/2021-2022 Fall/SecureWebAppDev/CardFlipper/CardFlipper/CardFlipper/frontend/src/containers/Dashboard.js"],"names":["React","useState","Form","Button","axios","constants","useNavigate","Modal","Dashboard","token","room","setRoom","navigate","show","setShow","message","setMessage","handleClose","handleShow","handleMessage","text","validateForm","length","createRoom","event","preventDefault","response","post","HOST","headers","roomID","data","console","log","state","error","joinRoom","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Dashboard.css\";\r\nimport axios from \"axios\";\r\nimport * as constants from './Constants';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Modal } from \"react-bootstrap\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default function Dashboard(token) {\r\n  const [room, setRoom] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  //Modal Data\r\n  const [show, setShow] = useState(false);\r\n  const [message, setMessage] = useState(\"\")\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleMessage= (text) => setMessage(text)\r\n\r\n  // This function validates the form\r\n  function validateForm() {\r\n    return room.length > 8 && room.length < 14;\r\n  }\r\n\r\n  // THis function sends a request to the backend to create a room\r\n  async function createRoom(event) {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post(constants.HOST + \"/room\", {}, {\r\n        headers: {\r\n          \"Authorization\": \"Bearer \" + token.token\r\n        }\r\n      });\r\n      const roomID = response.data.roomID;\r\n      console.log(roomID);\r\n      navigate(\"/game\", {state: {roomID: roomID}})\r\n    } catch (error) {\r\n      handleMessage(\"Couldn't Create Room. Try Again\")\r\n      handleShow();\r\n    }\r\n\r\n  }\r\n\r\n  // This sends a request to join a room\r\n  async function joinRoom(event) {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post(constants.HOST + \"/joinroom\",\r\n        {\r\n          roomID: room\r\n        },\r\n        {\r\n          headers: {\r\n            \"Authorization\": \"Bearer \" + token.token\r\n          }\r\n        });\r\n      const roomID = response.data.roomID;\r\n      navigate(\"/game\", {state: {roomID: roomID}})\r\n    } catch (error) {\r\n      console.log(error)\r\n      // The Room ID is not in the DB or the token isn't valid or network error\r\n      handleMessage(\"Couldn't Join Room. Try Again!\")\r\n      handleShow();\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"Dashboard\">\r\n      /**f */\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{message}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"Primary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Form onSubmit={joinRoom}>\r\n        <Form.Group size=\"lg\" controlId=\"joinRoom\">\r\n          <Form.Label>Join Room</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"room\"\r\n            value={room}\r\n            onChange={(e) => setRoom(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Go!\r\n        </Button>\r\n      </Form>\r\n\r\n      <Form onSubmit={createRoom}>\r\n        <Form.Group size=\"lg\" controlId=\"createRoom\">\r\n        </Form.Group>\r\n        <Button size=\"lg\" type=\"submit\">\r\n          Create Room!\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}